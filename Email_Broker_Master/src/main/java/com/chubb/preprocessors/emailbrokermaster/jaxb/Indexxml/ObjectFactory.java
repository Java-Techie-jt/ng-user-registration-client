//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.03.01 at 05:13:04 AM GMT 
//


package com.chubb.preprocessors.emailbrokermaster.jaxb.Indexxml;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.chubb.preprocessors.emailbrokermaster.jaxb.Indexxml package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _BpuCode_QNAME = new QName("", "bpu_code");
    private final static QName _ScanInfo_QNAME = new QName("", "scan_info");
    private final static QName _DocDescription_QNAME = new QName("", "doc_description");
    private final static QName _FtypCode_QNAME = new QName("", "ftyp_code");
    private final static QName _DocTypCode_QNAME = new QName("", "doc_typ_code");
    private final static QName _DocProducer_QNAME = new QName("", "doc_producer");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.chubb.preprocessors.emailbrokermaster.jaxb.Indexxml
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link IndexType }
     * 
     */
    public IndexType createIndexEnvelope() {
        return new IndexType();
    }

    /**
     * Create an instance of {@link Document }
     * 
     */
    public Document createDocument() {
        return new Document();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "bpu_code")
    public JAXBElement<String> createBpuCode(String value) {
        return new JAXBElement<String>(_BpuCode_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "scan_info")
    public JAXBElement<String> createScanInfo(String value) {
        return new JAXBElement<String>(_ScanInfo_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "doc_description")
    public JAXBElement<String> createDocDescription(String value) {
        return new JAXBElement<String>(_DocDescription_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ftyp_code")
    public JAXBElement<String> createFtypCode(String value) {
        return new JAXBElement<String>(_FtypCode_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "doc_typ_code")
    public JAXBElement<String> createDocTypCode(String value) {
        return new JAXBElement<String>(_DocTypCode_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "doc_producer")
    public JAXBElement<String> createDocProducer(String value) {
        return new JAXBElement<String>(_DocProducer_QNAME, String.class, null, value);
    }

}
